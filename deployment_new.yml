---
# Environment Variables
#   This playbook assumes that the folliowing ManageIQ parameters are defined as environment variables:
#   miq_url (MIQ_URL), miq_username (MIQ_USERNAME), miq_password (MIQ_PASSWORD)

- hosts: localhost
  vars_files:
  - vars.yml
  tasks:
  - name: Create Operator users in ManageIQ
    with_items: "{{ users }}"
    manageiq_user:
      name: "{{ item.name }}"
      state: 'present'
      fullname: "{{ item.full_name }}"
      password: "{{ item.password }}"
      group: "{{ item.group }}"
      # TODO (dkorn): will probavly verify SSL
      verify_ssl: False
    # TODO (dkorn): remove if no debug
    register: result

  # TODO (dkorn): decide if the printing the results is needed
  - debug: var=result

  - name: Add Amazon EC2 Provider to ManageIQ
    with_items: "{{ amazon_providers|default([]) }}"
    manageiq_provider:
      name: "{{ item.name }}"
      state: 'present'
      provider_type: "{{ item.type }}"
      provider_region: "{{ item.region }}"
      access_key_id: "{{ item.access_key_id }}"
      secret_access_key: "{{ item.secret_access_key }}"
      verify_ssl: False
    register: result

  - debug: var=result

  - name: Add Openshift Containers Providers to ManageIQ
    with_items: "{{ openshift_providers }}"
    manageiq_provider:
      name: "{{ item.name }}"
      provider_type: "{{ item.type }}"
      state: 'present'
      zone: "{{ item.zone }}"
      provider_api_hostname: "{{ item.hostname }}"
      provider_api_port: "{{ item.port }}"
      provider_api_auth_token: "{{ item.token }}"
      metrics: "{{ item.metrics }}"
      hawkular_hostname: "{{ item.hawkular_hostname }}"
      hawkular_port: "{{ item.hawkular_port }}"
      verify_ssl: False
    register: result

  - debug: var=result

  - name: Add Custom Attributes to Openshift Providers in ManageIQ
    with_items: "{{ openshift_providers }}"
    manageiq_custom_attributes:
      entity_type: "provider"
      entity_name: "{{ item.name }}"
      state: 'present'
      custom_attributes: "{{ item.custom_attributes }}"
      verify_ssl: False
    register: result

  - debug: var=result

  - name: Add Hawkular Datawarehouse Providers to ManageIQ
    with_items: "{{ hawkular_providers }}"
    manageiq_provider:
      name: "{{ item.name }}"
      provider_type: "{{ item.type }}"
      state: 'present'
      provider_api_hostname: "{{ item.hostname }}"
      provider_api_port: "{{ item.port }}"
      provider_api_auth_token: "{{ item.token }}"
      verify_ssl: False
    register: result

  - debug: var=result

  - name: Create group trigger in Hawkular Alerts
    with_subelements:
      - "{{ hawkular_providers }}"
      - triggers
    hawkular_alerts_group_trigger:
      hawkular_api_hostname: "{{ item.0.hostname }}"
      hawkular_api_port: "{{ item.0.port }}"
      hawkular_api_auth_token: "{{ item.0.token }}"
      tenant:  "{{ item.0.tenant }}"
      group_id: "{{ item.1.id }}"
      name: "{{ item.1.name }}"
      event_text: "{{ item.1.event_text|default() }}"
      severity: "{{ item.1.severity}}"
      auto_resolve: "{{ item.1.auto_resolve|default() }}"
      tags: "{{ item.1.tags|default({}) }}"
      conditions: "{{ item.1.conditions }}"
      state: 'present'
      verify_ssl: False
    register: result

  - debug: var=result

  - name: Create group members in Hawkular Alerts
    with_items:
       - "{{ group_trigger_members }}"
    hawkular_alerts_group_member:
      hawkular_api_hostname: "{{ item.hostname }}"
      hawkular_api_port: "{{ item.port }}"
      hawkular_api_auth_token: "{{ item.token }}"
      tenant:  "{{ item.tenant }}"
      group_id: "{{ item.group_id }}"
      id: "{{ item.id }}"
      name:  "{{ item.name }}"
      description:  "{{ item.description|default() }}"
      data_id_map: "{{ item.data_id_map }}"
      tags: "{{ item.tags|default({}) }}"
      state: 'present'
      verify_ssl: False
    register: result

  - debug: var=result
